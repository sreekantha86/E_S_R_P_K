
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@(Html.EJ().Grid<ems.domain.Customer > ("Grid")
                 .Datasource((IEnumerable<ems.domain.Customer>)ViewBag.datasource)
                 .ToolbarSettings(toolBar => toolBar.ShowToolbar().ToolbarItems(items =>
                 {
                     items.AddTool(ToolBarItems.ExcelExport);
                     items.AddTool(ToolBarItems.WordExport);
                     items.AddTool(ToolBarItems.PdfExport);
                 }))
                 .AllowPaging()
                 .IsResponsive(true)
                .EnableResponsiveRow(true)
                .AllowFiltering()
                 .Columns(col =>
                 {
                     col.Field("CusId").Visible(true).HeaderText("CusId").IsIdentity(true).IsPrimaryKey(true).TextAlign(TextAlign.Right).Add();
                     col.Field(p => p.CusName).HeaderText("Customer").TextAlign(TextAlign.Left).Width("30%").Add();
                     col.Field(p => p.Phone).HeaderText("Phone").TextAlign(TextAlign.Left).Width("15%").Add();
                     col.Field(p => p.Email).HeaderText("Email").TextAlign(TextAlign.Left).Width("20%").Add();
                     col.Field(p => p.ContactPerson).HeaderText("Contact Person").TextAlign(TextAlign.Left).Width("20%").Add();
                     col.Field(p => p.GSTNo).HeaderText("GST Reg. No").TextAlign(TextAlign.Left).Width("15%").Add();
                 })
                 .ClientSideEvents(events => events.RecordDoubleClick("DoubleClicked"))
                 .Mappers(map => map.ExportToExcelAction("Base/ExportToExcel").ExportToWordAction("Base/ExportToWord").ExportToPdfAction("Base/ExportToPdf"))
)

<script>
    function DoubleClicked(args)
    {
        var id = args.data["CusId"];
        var url = '@Url.Action("Edit", "Customer")';
        location.href = url + "/" + id;
    }
</script>