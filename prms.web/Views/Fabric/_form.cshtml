@model ems.domain.Fabric
<div class="form-group row">
    @Html.LabelFor(m => m.FabricDescription , new { @class = "col-sm-2 col-form-label" })
    <div class="col-sm-5">
        @Html.TextBoxFor(model => model.FabricDescription, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.FabricDescription)
    </div>
</div>
<div class="form-group row">
    @Html.LabelFor(m => m.ConsumptionPerGarment, new { @class = "col-sm-2 col-form-label" })
    <div class="col-sm-5">
        @Html.EJ().MaskEditTextBoxFor(model => model.ConsumptionPerGarment).MaskFormat("#######")
        @Html.ValidationMessageFor(model => model.ConsumptionPerGarment)
    </div>
</div>
<div class="form-group row">
    @Html.LabelFor(m => m.Price, new { @class = "col-sm-2 col-form-label" })
    <div class="col-sm-5">
        @Html.EJ().MaskEditTextBoxFor(model => model.Price).MaskFormat("#######.##")
        @Html.ValidationMessageFor(model => model.Price)
    </div>
</div>
<div class="form-group row">
    @Html.LabelFor(m => m.VendorId, new { @class = "col-sm-2 col-form-label" })
    <div class="col-sm-5">
        @Html.EJ().DropDownListFor(model => model.VendorId, (Syncfusion.JavaScript.Models.DropDownListProperties)ViewData["VendorDropdownModel"])
        @Html.ValidationMessageFor(model => model.VendorId)
    </div>
</div>
<div class="form-group row">
    @Html.LabelFor(m => m.ExpectedDeliveryDate, new { @class = "col-sm-2 col-form-label" })
    <div class="col-sm-5">
        @Html.EJ().DatePickerFor(model => model.ExpectedDeliveryDate).DateFormat("dd-MMM-yyyy")
        @Html.ValidationMessageFor(model => model.ExpectedDeliveryDate)
    </div>
</div>
